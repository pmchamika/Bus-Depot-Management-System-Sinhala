/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SLTB_isuru.finance;

//import SLTB_chamika.employee.*;
//import SLTB_chamika.Class.Employee;
import SLTB_isuru.Class.Finance;
import com.ConnectionMysql.MysqlConnect;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

public class IncomeUp extends javax.swing.JPanel {

    private static IncomeUp salariesUp = null;
    private Pattern regexPattern;
    private Matcher regMatcher;

    /**
     * Creates new form ManageEmployeeUp
     */
    public IncomeUp() {
        initComponents();
    }

    public static IncomeUp getobj() {
        if (salariesUp == null) {
            salariesUp = new IncomeUp();
        }
        return salariesUp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        add1 = new javax.swing.JLabel();
        update2 = new javax.swing.JLabel();
        delete2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1200, 60));

        insert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        insert.setText("Insert");
        insert.setToolTipText("Insert Record");
        insert.setOpaque(false);
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update.setText("Update");
        update.setToolTipText("Update Record");
        update.setOpaque(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        search.setToolTipText("Search for a Record");
        search.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchInputMethodTextChanged(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchPropertyChange(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setText("Delete");
        delete.setToolTipText("");
        delete.setOpaque(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        add1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eadd.png"))); // NOI18N
        add1.setText("jLabel1");
        add1.setToolTipText("Insert Record");
        add1.setMaximumSize(new java.awt.Dimension(50, 50));
        add1.setMinimumSize(new java.awt.Dimension(50, 50));
        add1.setPreferredSize(new java.awt.Dimension(50, 50));
        add1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add1MouseClicked(evt);
            }
        });

        update2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eupdate.png"))); // NOI18N
        update2.setToolTipText("Update Record");
        update2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update2MouseClicked(evt);
            }
        });

        delete2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edelete.png"))); // NOI18N
        delete2.setToolTipText("Delete Record");
        delete2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delete2MouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/esearch.png"))); // NOI18N
        jLabel1.setToolTipText("Search for a Record");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(update2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(delete2, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delete2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(insert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(add1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        Income INC = Income.getobj();

        String iitem = INC.item.getSelectedItem().toString();
        String iunitprice = INC.unitprice.getText();
        String iqty = INC.qty.getText();

        Finance f1 = new Finance();
        String valid = ValidateIncome();
        if (valid.equals("success")) {
            int sn = Integer.parseInt(iunitprice);
            int sn1 = Integer.parseInt(iqty);

            f1.setIitem(iitem);
            f1.setIunitprice(sn);
            f1.setIqty(sn1);

            f1.insertIncome();
            String item = "";
            INC.item.setSelectedItem(item);
            String unitprice = "";
            INC.unitprice.setText(unitprice);
            String qty = "";
            INC.qty.setText(qty);
            Income.getobj().IncomeTable.repaint();
        }


    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:

        updateIncome();
        Income.getobj().TableLoad1();
    }//GEN-LAST:event_updateActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_searchKeyTyped

    private void searchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_searchPropertyChange

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchKeyPressed

    private void searchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_searchInputMethodTextChanged

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        Finance f1 = new Finance();
        try {
            /*calling the mysql connection class*/
            Connection conn = MysqlConnect.getDbCon();
            Income INC = Income.getobj();
            String se = search.getText();

            String query2 = "select count(Item),Item,Date,Qty,UnitPrice,Total from otherincomes where ID='" + se + "'";
            Statement stmt2 = conn.createStatement();
            ResultSet rs = stmt2.executeQuery(query2);

            while (rs.next()) {
                int count = rs.getInt("count(Item)");
                System.out.println(count);
                if (count == 1) {
                    String item = rs.getString("Item");
                    INC.item.setSelectedItem(item);
                    String unitprice = Integer.toString(rs.getInt("UnitPrice"));
                    INC.unitprice.setText(unitprice);
                    String qty = Integer.toString(rs.getInt("Qty"));
                    INC.qty.setText(qty);
                    INC.TableLoad1();
                } else {
                    String item = "";
                    INC.item.setSelectedItem(item);
                    String unitprice = "";
                    INC.unitprice.setText(unitprice);
                    String qty = "";
                    INC.qty.setText(qty);
                }
                Income.getobj().IncomeTable.repaint();
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:

        DeleteIncome();
        Income.getobj().TableLoad1();
    }//GEN-LAST:event_deleteActionPerformed

    private void add1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add1MouseClicked


    }//GEN-LAST:event_add1MouseClicked

    private void update2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_update2MouseClicked

    private void delete2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_delete2MouseClicked
    public String ValidateIncome() {

        Income INC = Income.getobj();

        String iitem = INC.item.getSelectedItem().toString();
        String iunitprice = INC.unitprice.getText();
        String iqty = INC.qty.getText();

        if (iunitprice.equals("")) {
            INC.unit.setText("ysia;eka mqrjkak");
            return "fail";

        } else {
            regexPattern = Pattern.compile("^[0-9]{0,9}$");
            regMatcher = regexPattern.matcher(iunitprice);
            if (regMatcher.matches()) {
                INC.unit.setText("");
            } else {
                INC.unit.setText("wxl muKla we;=<;a lrkak");
                return "fail";
            }
            if (iqty.equals("")) {
                INC.unitcnt.setText("ysia;eka mqrjkak");
                return "fail";

            } else {
                regexPattern = Pattern.compile("^[0-9]{0,9}$");
                regMatcher = regexPattern.matcher(iqty);
                if (regMatcher.matches()) {
                    INC.unitcnt.setText("");
                } else {
                    INC.unitcnt.setText("wxl muKla we;=<;a lrkak");
                    return "fail";
                }

                return "success";

            }
        }
    }

    public void DeleteIncome() {
        String se = search.getText();

        try {
            /*calling the mysql connection class*/
            Connection conn = MysqlConnect.getDbCon();
            Income INC = Income.getobj();

            String query5 = "select count(ID),Item,Date,Qty,UnitPrice,Total from otherincomes where ID='" + se + "'";
            Statement stmt5 = conn.createStatement();
            ResultSet rs5 = stmt5.executeQuery(query5);
            while (rs5.next()) {
                int i = rs5.getInt("count(ID)");
                System.out.println(i);
                if (i == 1) {
                    String query6 = "DELETE FROM otherincomes WHERE ID='" + se + "'";
                    Statement stmt6 = conn.createStatement();
                    stmt6.executeUpdate(query6);
                    INC.TableLoad1();
                    JOptionPane.showMessageDialog(null, "Data Removed!!");
                    String item = "";
                    INC.item.setSelectedItem(item);
                    String unitprice = "";
                    INC.unitprice.setText(unitprice);
                    String qty = "";
                    INC.qty.setText(qty);
                    String SS = "";
                    search.setText(SS);
                } else {

                    JOptionPane.showMessageDialog(null, "Salary ID is not Valid, Please Try Again ");
                    System.out.println("Invalid ID");
                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public void updateIncome() {

        System.out.println("1");

        Date date = new Date();
        String date1 = new SimpleDateFormat("yyyy-MM-dd").format(date);
        String se = search.getText();

        Income INC = Income.getobj();

        String iitem = INC.item.getSelectedItem().toString();
        String iunitprice = INC.unitprice.getText();
        String iqty = INC.qty.getText();

        int sn = Integer.parseInt(iunitprice);
        int sn1 = Integer.parseInt(iqty);

        try {
            /*calling the mysql connection class*/
            Connection conn = MysqlConnect.getDbCon();

            System.out.println("1");

            String query15 = "select count(ID),Item,Date,Qty,UnitPrice,Total from otherincomes where ID='" + se + "' ";
            Statement stmt15 = conn.createStatement();
            ResultSet rs15 = stmt15.executeQuery(query15);
            while (rs15.next()) {
                int i = rs15.getInt("count(ID)");

                if (i == 1) {

                    int total = sn * sn1;
                    String query1 = "update otherincomes set Item='" + iitem + "',Date='" + date1 + "',Qty='" + iqty + "',UnitPrice='" + iunitprice + "',Total='" + total + "' where ID='" + se + "'";
                    Statement stmt1 = conn.createStatement();
                    stmt1.executeUpdate(query1);
                    System.out.println("Success");
                    INC.TableLoad1();
                    JOptionPane.showMessageDialog(null, "Updated Successful!!!");
                    String item = "";
                    INC.item.setSelectedItem(item);
                    String unitprice = "";
                    INC.unitprice.setText(unitprice);
                    String qty = "";
                    INC.qty.setText(qty);
                    String SS = "";
                    search.setText(SS);
                }
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel add1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel delete2;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JTextField search;
    private javax.swing.JButton update;
    private javax.swing.JLabel update2;
    // End of variables declaration//GEN-END:variables
}
