/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SLTB_ghost.security;

import static SLTB_ghost.security.button1.viewer;
import com.ConnectionMysql.MysqlConnect;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author GHOST
 */
public class button2 extends javax.swing.JPanel {
private static button2 button2O=null;
public static JRViewer viewer=null;
private Pattern regexPattern;
private Matcher regMatcher;
    /**
     * Creates new form button2
     */
    public button2() {
        initComponents();
    }
   public static button2 getobj(){
        if(button2O==null){
            button2O=new button2();
        }
        return button2O;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        report = new javax.swing.JButton();
        monLabel = new javax.swing.JLabel();
        rMonth = new javax.swing.JComboBox<>();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1200, 72));

        insert.setBackground(new java.awt.Color(0, 255, 0));
        insert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        insert.setText("INSERT");
        insert.setToolTipText("Insert Record");
        insert.setOpaque(false);
        insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertMouseClicked(evt);
            }
        });
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 0));
        update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.setToolTipText("Update Record");
        update.setOpaque(false);
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        search.setToolTipText("Search for a Record");
        search.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchPropertyChange(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setText("DELETE");
        delete.setToolTipText("Delete Record");
        delete.setMaximumSize(new java.awt.Dimension(89, 25));
        delete.setMinimumSize(new java.awt.Dimension(89, 25));
        delete.setOpaque(false);
        delete.setPreferredSize(new java.awt.Dimension(89, 25));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/esearch.png"))); // NOI18N
        jLabel1.setToolTipText("Search for a Record");

        report.setBackground(new java.awt.Color(0, 0, 255));
        report.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        report.setText("Report");
        report.setMaximumSize(new java.awt.Dimension(89, 25));
        report.setMinimumSize(new java.awt.Dimension(89, 25));
        report.setPreferredSize(new java.awt.Dimension(89, 25));
        report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportMouseClicked(evt);
            }
        });
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        monLabel.setFont(new java.awt.Font("FMBindumathi", 1, 18)); // NOI18N
        monLabel.setForeground(new java.awt.Color(204, 204, 204));
        monLabel.setText("udih ");

        rMonth.setFont(new java.awt.Font("FMBindumathi", 1, 14)); // NOI18N
        rMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ckjdß", "fmnrjdß", "ud¾;=", "wm%sfh,a", "uehs", "cQks", "cQ,s", "wf.daia;=", "iema;eïn¾", "Tlaf;dan¾", "fkdfjïn¾", "foieïn¾" }));
        rMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(insert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(update)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(report, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(update, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(insert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rMonth))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(search))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
           try {	/*calling the mysql connection class*/
            Connection conn=MysqlConnect.getDbCon();
            other_vehicle other_vehicleS=other_vehicle.getobj();
            
            String license_number=other_vehicleS.license_number.getText();
            String driver_nic=other_vehicleS.driver_nic.getText();
            String reason=other_vehicleS.reason.getText();
            
             String valid= Validateother_vehicle();
                if(valid.equals("success")){                
            String query1="insert into other_vehicle(license_number,driver_nic,Reason) values ('"+license_number+"','"+driver_nic+"','"+reason+"')";
            Statement stmt1= conn.createStatement();
            stmt1.executeUpdate(query1);

            other_vehicle.getobj().otable();
                }
      }    catch (Exception e) {
            System.err.println(e);
        }
              
        
      
     

    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
           try {	/*calling the mysql connection class*/
            Connection conn=MysqlConnect.getDbCon();
            other_vehicle other_vehicleS=other_vehicle.getobj();
            
            String se=search.getText();
            
            String license_number=other_vehicleS.license_number.getText();
            String driver_nic=other_vehicleS.driver_nic.getText();
            String reason=other_vehicleS.reason.getText();
            
            String query4="select count(ID)from other_vehicle where ID='"+se+"'" ;
            Statement stmt4= conn.createStatement();
            ResultSet rs4=stmt4.executeQuery(query4);
            while(rs4.next()){
               int i=rs4.getInt("count(ID)");
               if(i==1){
                   String valid= Validateother_vehicle();
                if(valid.equals("success")){  
                    String query3 = "UPDATE other_vehicle SET license_number='"+license_number+"',driver_nic='"+driver_nic+"',Reason='"+reason+"'WHERE ID='"+se+"'";
                    Statement stmt3= conn.createStatement();
                    stmt3.executeUpdate(query3);
               }}
            
            other_vehicle.getobj().otable();
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void searchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_searchInputMethodTextChanged

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_searchPropertyChange

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchKeyPressed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
     try {	/*calling the mysql connection class*/
            Connection conn=MysqlConnect.getDbCon();
            other_vehicle other_vehicleS=other_vehicle.getobj();
            String se=search.getText();
            
            String query2="select count(ID),license_number,driver_nic,Reason from other_vehicle where ID='"+se+"' " ;
            Statement stmt2= conn.createStatement();
            ResultSet rs=stmt2.executeQuery(query2);
            while(rs.next()){
               int count=rs.getInt("count(ID)");
               if(count==1){
               String license_number=rs.getString("license_number");
               other_vehicleS.license_number.setText(license_number);
               String driver_nic=rs.getString("driver_nic");
               other_vehicleS.driver_nic.setText(driver_nic);               
               String Reason=rs.getString("Reason");
               other_vehicleS.reason.setText(Reason);
                 
               }
               else{
               String license_number="";
               other_vehicleS.license_number.setText(license_number); 
               String driver_nic="";
               other_vehicleS.driver_nic.setText(driver_nic);
               String Reason="";
               other_vehicleS.reason.setText(Reason);

               }}
            
            
            other_vehicle.getobj().otable();

            
             } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_searchKeyTyped

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
           try {	/*calling the mysql connection class*/
            Connection conn=MysqlConnect.getDbCon();
            other_vehicle other_vehicleS=other_vehicle.getobj();


            String se=search.getText();
            
            
          String query5="select count(ID)from other_vehicle where ID='"+se+"'" ;
            Statement stmt5= conn.createStatement();
            ResultSet rs5=stmt5.executeQuery(query5);
            while(rs5.next()){
               int i=rs5.getInt("count(ID)");
               if(i==1){
                   String valid= Validateother_vehicle();
                if(valid.equals("success")){  
                    String query6 = "delete from other_vehicle WHERE ID='"+se+"'";
                    Statement stmt6= conn.createStatement();
                    stmt6.executeUpdate(query6);
               }else{
                                     
                   showMessage("Employee is not Valid, Please Try Again ");
                   System.out.println("Invalid ID");
               }
               }
               
            other_vehicle.getobj().otable();
        
            }
           
           } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_deleteActionPerformed

     private void showMessage(String text) {
		JOptionPane.showMessageDialog(null, text);
	}
     
      public String Validateother_vehicle(){
            other_vehicle other_vehicleS=other_vehicle.getobj();
            
            String license_number=other_vehicleS.license_number.getText();
            String driver_nic=other_vehicleS.driver_nic.getText();
            String reason=other_vehicleS.reason.getText();
            
             if(license_number.equals("")){
         other_vehicleS.olicense_number.setText("fuu ;Srej ysiaj ;eìh fkdyelsh");
         
       
     }else{
         regexPattern = Pattern.compile("^[a-zA-Z-0-9]{5,7}$");
        regMatcher   = regexPattern.matcher(license_number);
        if(regMatcher.matches()) {
            other_vehicleS.olicense_number.setText("");
        } else {
            other_vehicleS.olicense_number.setText("jdyk ,shdmosxÑ wxlh jeros");
            return "fail";
        }
     }
    if(driver_nic.equals("")){
         other_vehicleS.onic.setText("ßhÿre ,shdmosxÑ wxlh jeros");
         return "fail";
         
     }else{
            regexPattern = Pattern.compile("^B+[0-9]{7}$");
        regMatcher   = regexPattern.matcher(driver_nic);
        if(regMatcher.matches()) {
            other_vehicleS.onic.setText("");
        } else {
            other_vehicleS.onic.setText("ßhÿre ,shdmosxÑ wxlh jeros");
            return "fail";
        }
         
     }
    if(reason.equals("")){
         other_vehicleS.oreason.setText("fuu ;Srej ysiaj ;eìh fkdyelsh");
         return "fail";
     }else{
       other_vehicleS.oreason.setText("");
     }
        return "success";
 }
     

      
      
    
    private void insertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_insertMouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_updateMouseClicked

    private void reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_reportMouseClicked

    private void rMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rMonthActionPerformed
        // TODO add your handling code here:

        
    }//GEN-LAST:event_rMonthActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        other_vehicle other_vehicleS=other_vehicle.getobj();
        button2 button2O=button2.getobj();
        String rPath;
        String month = null;
        String saln=button2O.search.getText();
        String mon= (String) rMonth.getSelectedItem();
        if(mon=="ckjdß"){
            month="01";
        }else if(mon=="fmnrjdß"){
            month="02";
        }else if(mon=="ud¾;="){
            month="03";
        }else if(mon=="wm%sfh,a"){
            month="04";
        }else if(mon=="uehs"){
            month="05";
        }else if(mon=="cQks"){
            month="06";
        }else if(mon=="cQ,s"){
            month="07";
        }else if(mon=="wf.daia;="){
            month="08";
        }else if(mon=="iema;eïn¾"){
            month="09";
        }else if(mon=="Tlaf;dan¾"){
            month="10";
        }else if(mon=="fkdfjïn¾"){
            month="11";
        }else if(mon==" foieïn¾"){
            month="12";
        }

        Date date = new Date();
        String date1= new SimpleDateFormat("yyyy-MM-dd").format(date);

        String[] DateParts = date1.split("-");

        String year = DateParts[0];
        String dash="-";
        String rym=year+dash+month;
        System.out.println(rym);

        rPath="src\\SLTB_ghost\\report\\otherv.jasper";

        HashMap par = new HashMap();

        par.put("salNo", saln);
        par.put("re", rym);

        if(report.getText().equalsIgnoreCase("Report")){
            report.setBackground(new java.awt.Color(255, 51, 51));
            report.setText("Cancel");

            button2O.setVisible(true);
            other_vehicleS.setVisible(false);

            ParameterizedReport(rPath,par);

        }
        else if(report.getText().equalsIgnoreCase("Cancel")){
            report.setBackground(new java.awt.Color(102, 153, 255));
            report.setText("Report");

            viewer.setVisible(false);
            button2O.setVisible(true);
            other_vehicleS.setVisible(true);
        }
    }//GEN-LAST:event_reportActionPerformed
 public void ParameterizedReport(String reportPath, HashMap par){
     
   SLTB_sachin.Temp te=SLTB_sachin.Temp.temp1;
   Connection conn = com.ConnectionMysql.MysqlConnect.getDbCon();
   viewer=null;
   
     
     //Generating reports inside jpanel
     try{
     
        JasperPrint print = JasperFillManager.fillReport(reportPath,par,conn);
        viewer = new JRViewer(print);
        viewer.setOpaque(true);
        viewer.setVisible(true);
        viewer.setPreferredSize(new Dimension(1149, 710));
       
        
        }catch (Exception e){
           e.printStackTrace();
       }  
        te.mainsetpanel.add(viewer,te.cmain);
        
        
 }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel monLabel;
    private javax.swing.JComboBox<String> rMonth;
    public javax.swing.JButton report;
    private javax.swing.JTextField search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
