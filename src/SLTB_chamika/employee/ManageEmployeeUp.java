/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SLTB_chamika.employee;

import SLTB_chamika.Class.Employee;
import SLTB_sachin.Temp;
import com.ConnectionMysql.MysqlConnect;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Hashtable;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
/**
 *
 * @author Chamika Prabath
 */
public class ManageEmployeeUp extends javax.swing.JPanel {
private static ManageEmployeeUp manageEup=null;

    /**
     * Creates new form ManageEmployeeUp
     */
    public ManageEmployeeUp() {
        initComponents();
    }
   public static ManageEmployeeUp getobj(){
        if(manageEup==null){
            manageEup=new ManageEmployeeUp();
        }
        return manageEup;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        search = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1200, 60));

        insert.setBackground(new java.awt.Color(51, 255, 51));
        insert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eadd.png"))); // NOI18N
        insert.setText("Insert");
        insert.setToolTipText("Insert Record");
        insert.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        insert.setOpaque(false);
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 51));
        update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eupdate.png"))); // NOI18N
        update.setText("Update");
        update.setToolTipText("Update Record");
        update.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        update.setOpaque(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        search.setToolTipText("Search for a Record");
        search.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchInputMethodTextChanged(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchPropertyChange(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 51, 51));
        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edelete.png"))); // NOI18N
        delete.setText("Delete");
        delete.setToolTipText("");
        delete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        delete.setOpaque(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/esearch.png"))); // NOI18N
        jLabel1.setToolTipText("Search for a Record");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(insert)
                        .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        ManageEmployee manageE=ManageEmployee.getobj();
            
            String SName=manageE.sname.getText();
            String Name=manageE.name.getText();
            String Email=manageE.email.getText();
            String gen=(String) manageE.gender.getSelectedItem();
            String addr=manageE.address.getText();
            String Nic=manageE.nic.getText();
            String Grade=(String) manageE.grade.getSelectedItem();
            String Dob=manageE.dob.getText();
            String sal=manageE.bsalary.getText();
            String acc=manageE.accNo.getText();
            String password=manageE.pass.getText();
            String contact=manageE.phone.getText();
            String status=manageE.mStatus.getText();
            String emer=manageE.emergency.getText();  

                                    Employee e1=new Employee();


                                    e1.setSName(SName);
                                    e1.setName(Name);
                                    e1.setEmail(Email);
                                    e1.setAddr(addr);
                                    e1.setNic(Nic);
                                    e1.setGen(gen);
                                    e1.setGrade(Grade);
                                    e1.setPassword(password);
                                    e1.setSal(sal);
                                    e1.setAcc(acc);
                                    e1.setContact(contact);
                                    e1.setDob(Dob);
                                    e1.setStatus(status);
                                    e1.setEmer(emer);
                                   String valid= e1.ValidateEmployee();
                                   if(valid.equals("success")){
                                    e1.InsertEmployee();
                                   }
        
      
    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
       ManageEmployee manageE=ManageEmployee.getobj();
            
            String se=search.getText();
            String SName=manageE.sname.getText();
            String Name=manageE.name.getText();
            String Email=manageE.email.getText();
            String gen=(String) manageE.gender.getSelectedItem();
            String addr=manageE.address.getText();
            String Nic=manageE.nic.getText();
            String Grade=(String) manageE.grade.getSelectedItem();
            String Dob=manageE.dob.getText();
            String sal=manageE.bsalary.getText();
            String acc=manageE.accNo.getText();
            String password=manageE.pass.getText();
            String contact=manageE.phone.getText();
            String status=manageE.mStatus.getText();
            String emer=manageE.emergency.getText();  

                                    Employee e1=new Employee();

                                    e1.setSe(se);
                                    e1.setSName(SName);
                                    e1.setName(Name);
                                    e1.setEmail(Email);
                                    e1.setAddr(addr);
                                    e1.setNic(Nic);
                                    e1.setGen(gen);
                                    e1.setGrade(Grade);
                                    e1.setPassword(password);
                                    e1.setSal(sal);
                                    e1.setAcc(acc);
                                    e1.setContact(contact);
                                    e1.setDob(Dob);
                                    e1.setStatus(status);
                                    e1.setEmer(emer);
                                    String valid= e1.ValidateEmployee();
                                   if(valid.equals("success")){
                                    e1.UpdateEmployee();
                                    }
    }//GEN-LAST:event_updateActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:
 
    }//GEN-LAST:event_searchKeyTyped

    private void searchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchPropertyChange
        // TODO add your handling code here:
   
    }//GEN-LAST:event_searchPropertyChange

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_searchKeyPressed

    private void searchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchInputMethodTextChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_searchInputMethodTextChanged

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
        Employee e1=new Employee();
              try {	/*calling the mysql connection class*/
            Connection conn=MysqlConnect.getDbCon();
            ManageEmployee manageE=ManageEmployee.getobj();
            String se=search.getText();
            
            String query2="select count(SalaryNo),E_Email,E_SName,E_Name,E_Gender,E_Address,E_NIC,E_Grade,E_DOB,E_BasicSalary,E_AccountNo,E_Password,E_Phone,E_MedicalStatus,E_EmergencyContact from Employee where E_Name='"+se+"' or E_NIC='"+se+"' or SalaryNo='"+se+"' " ;
            Statement stmt2= conn.createStatement();
            ResultSet rs=stmt2.executeQuery(query2);
            while(rs.next()){
               int count=rs.getInt("count(SalaryNo)");
               if(count==1){
               String ni=rs.getString("E_NIC");
               manageE.nic.setText(ni);
               String snam=rs.getString("E_SName");
               manageE.sname.setText(snam);               
               String nam=rs.getString("E_Name");
               manageE.name.setText(nam);
               String emai=rs.getString("E_Email");
               manageE.email.setText(emai);
               String ge=rs.getString("E_Gender");
               manageE.gender.setSelectedItem(ge);
               String gra=rs.getString("E_Grade");
               manageE.grade.setSelectedItem(gra);
               String Addr=rs.getString("E_Address");
               manageE.address.setText(Addr);
               String Dob=rs.getString("E_DOB");
               manageE.dob.setText(Dob);
               String bs=rs.getString("E_BasicSalary");
               manageE.bsalary.setText(bs);
               String ac=rs.getString("E_AccountNo");
               manageE.accNo.setText(ac);
               String pwd=rs.getString("E_Password");
               manageE.pass.setText(pwd);
               String contact=rs.getString("E_Phone");
               manageE.phone.setText(contact);
               String med=rs.getString("E_MedicalStatus");
               manageE.mStatus.setText(med);
               String emer=rs.getString("E_EmergencyContact");
               manageE.emergency.setText(emer);
               
               if((ni!="")&&(nam!="")){
                                   //Generate QR
            String query17="select SalaryNo from Employee where E_Name='"+nam+"' or E_NIC='"+ni+"' or E_AccountNo='"+ac+"' ";
            Statement stmt17= conn.createStatement();
            ResultSet rs17=stmt17.executeQuery(query17);
            while(rs17.next()){
            int i1=rs17.getInt("SalaryNo");
            
             e1.setSalNo(i1);
             e1.Search();
                
            ManageEmployeeSide manageEside=ManageEmployeeSide.getobj(); 
            manageEside.setVisible(true);
            Temp tmp=Temp.temp1;
            tmp.sidesetpanel.add(manageEside,tmp.cside);
                     
              }  
               }
               }else{
               String ni="";
               manageE.nic.setText(ni); 
               String emai="";
               manageE.email.setText(emai);
               String snam="";
               manageE.sname.setText(snam);
               String nam="";
               manageE.name.setText(nam);
               String ge="Male";
               manageE.gender.setSelectedItem(ge);
               String gra="Driver";
               manageE.grade.setSelectedItem(gra);
               String Addr="";
               manageE.address.setText(Addr);
               String Dob="";
               manageE.dob.setText(Dob);
               String bs="";
               manageE.bsalary.setText(bs);
               String ac="";
               manageE.accNo.setText(ac);
               String pwd="";
               manageE.pass.setText(pwd);
               String contact="";
               manageE.phone.setText(contact);
               String med="";
               manageE.mStatus.setText(med);
               String emer="";
               manageE.emergency.setText(emer);
               }
            }
            
             } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
                      
               String se=search.getText();
            
               Employee e1=new Employee();
               e1.setSe(se);
               e1.DeleteEmployee();
                                 
         
    }//GEN-LAST:event_deleteActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
